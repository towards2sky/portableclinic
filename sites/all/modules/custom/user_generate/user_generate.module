<?php

/**
 * @file
 * Code for the User Create By Role module.
 */

/**
 * Implements hook_menu().
 */
function user_generate_menu() {
  $items['generate_login_key'] = array(
    'title' => t('Generate Login Key'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('generate_login_key_form'),
    'access arguments' => array('administer Key Generator'),
    'type' => MENU_NORMAL_ITEM,  
  );
  $items['generate_single_key'] = array(
    'title' => t('Generate Single Key'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('generate_single_key_form'),
    'access arguments' => array('administer Key Generator'),
    'type' => MENU_NORMAL_ITEM,  
  ); 
  
  $items['login'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('login_by_accesskey_form'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,  
  );
  return $items;
}



function login_by_accesskey_form(){
    
    $form['username'] = array(
    '#type' => 'password',
    '#title' => t('Enter Access Key'),
    '#required' => TRUE,
    '#size' => 30,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Login'),
  );
  return $form;
    
}

function login_by_accesskey_form_submit($form_id, &$form_state){
    global $user;
    $username = $form_state['values']['username'];
    $user = user_load(1);
    
//    print '<pre>';
//    print_r($user); exit;
}


function generate_login_key_form(){

   $form['num'] = array(
    '#type' => 'textfield',
    '#title' => t('How many users access would you like to generate?'),
    '#default_value' => 10,
    '#size' => 10,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Generate'),
  );
  return $form;
}


function generate_single_key_form(){
    
        $form['accesskey'] = array(
            '#type' => 'textfield',
            '#title' => t('Enter desirable key name would you like to generate?'),
            '#size' => 50,
            '#required' => TRUE,
        );
        $form['submit'] = array(
            '#type' => 'submit',
            '#value' => t('Generate'),
        );
        
        $form['#validate'][0] = 'accesskey_validation';
        return $form;
        
}
   
function accesskey_validation( &$form, &$form_state ){
   $accesskey = trim($form_state['values']['accesskey']);
   
   $output['msg'] = '';
   if(!$accesskey){
     $output['msg'] = t('Enter value of access key name.');   
   } else {
       
        $ret = _user_generate_check_is_accesskey_exists($accesskey);
        if($ret){
      $output['msg'] = t('Acess key already used.');     
        }
   }

   
   
   if($output['msg']){
       form_set_error('accesskey', $output['msg']);
   }  
}
function generate_single_key_submit($form_id, &$form_state){
  $username = $form_state['values']['accesskey'];
  portableclinic_users_create($values['num'], $time_range, $roles, $username );
  
}   

/**
 * hook_submit();
 * @param type $form_id
 * @param type $form_state 
 */
function generate_login_key_form_submit($form_id, &$form_state) {
  module_load_include('inc', 'devel_generate');
  $values = $form_state['values'];
  $time_range = 1;
  $roles = array('0' => 0,'4' => 4);   
  portableclinic_users_create($values['num'], $time_range, $roles );
}

/**
 * Generate some users.
 *
 * @param $num
 *  Number of users to generate.
 * @param $kill
 *  Boolean that indicates if existing users should be removed first.
 * @param $age
 *  The max age of each randomly-generated user, in seconds.
 * @param $roles
 *  An array of role IDs that the users should receive.
 */

function portableclinic_users_create($num, $age = 0, $roles = array(), $username = '') {
 
  if ($num > 0) {
    $names = array();
    while (count($names) < $num) {
        if(!$username){
      $name = devel_generate_word(mt_rand(6, 12));
        } else {
      $name =  $username;
        }
      $names[$name] = '';
    }

    if (empty($roles)) {
      $roles = array(DRUPAL_AUTHENTICATED_RID);
    }
    foreach ($names as $name => $value) {
      $edit = array(
        'uid'     => NULL, 
        'name'    => $name,
        'pass'    => 'demo',
        'mail'    => 'xyz@acb.com',
        'status'  => 1,
        'created' => REQUEST_TIME,
        'roles' => drupal_map_assoc($roles),
        'language' => LANGUAGE_NONE,
      );
      $account = user_save(drupal_anonymous_user(), $edit);
    }
  }
  drupal_set_message(t('!num_users created.', array('!num_users' => format_plural($num, '1 User Login Key', '@count User Login Keys'))));
}




function _user_generate_check_is_accesskey_exists($accesskey) {
  return db_query("SELECT COUNT(u.name) count FROM {users} u WHERE LOWER(u.name) = LOWER(:username)", array(':username' => $accesskey))->fetchField();
}